{
    "$id": "https://spec.openapis.org/oas/3.1/schema/WORK-IN-PROGRESS",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "description": "The description of OpenAPI v3.1.x Documents without Schema Object validation",
    "type": "object",
    "properties": {
        "openapi": {
            "type": "string",
            "pattern": "^3\\.1\\.\\d+(-.+)?$"
        },
        "info": {
            "$ref": "#/definitions/info"
        },
        "jsonSchemaDialect": {
            "type": "string",
            "format": "uri",
            "default": "https://spec.openapis.org/oas/3.1/dialect/WORK-IN-PROGRESS"
        },
        "servers": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/server"
            },
            "default": [
                {
                    "url": "/"
                }
            ]
        },
        "paths": {
            "$ref": "#/definitions/paths"
        },
        "webhooks": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/path-item"
            }
        },
        "components": {
            "$ref": "#/definitions/components"
        },
        "security": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/security-requirement"
            }
        },
        "tags": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/tag"
            }
        },
        "externalDocs": {
            "$ref": "#/definitions/external-documentation"
        },
        "x-42c-request-strategies": {
            "$ref": "#/definitions/X42cRequestStrategies"
        },
        "x-42c-response-strategies": {
            "$ref": "#/definitions/X42cResponseStrategies"
        },
        "x-42c-no-authentication": {
            "$ref": "#/definitions/X42cNoAuthentication"
        },
        "x-42c-mtls": {
            "$ref": "#/definitions/X42cMTLS"
        },
        "x-42c-skipIssues": {
            "$ref": "#/definitions/X42cSkipIssues"
        }
    },
    "required": [
        "openapi",
        "info"
    ],
    "anyOf": [
        {
            "required": [
                "paths"
            ]
        },
        {
            "required": [
                "components"
            ]
        },
        {
            "required": [
                "webhooks"
            ]
        }
    ],
    "additionalProperties": false,
    "definitions": {
        "info": {
            "$comment": "https://spec.openapis.org/oas/v3.1#info-object",
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "termsOfService": {
                    "type": "string",
                    "format": "uri"
                },
                "contact": {
                    "$ref": "#/definitions/contact"
                },
                "license": {
                    "$ref": "#/definitions/license"
                },
                "version": {
                    "type": "string"
                }
            },
            "required": [
                "title",
                "version"
            ],
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "contact": {
            "$comment": "https://spec.openapis.org/oas/v3.1#contact-object",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string",
                    "format": "uri"
                },
                "email": {
                    "type": "string",
                    "format": "email"
                }
            },
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "license": {
            "$comment": "https://spec.openapis.org/oas/v3.1#license-object",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "url": {
                    "type": "string",
                    "format": "uri"
                }
            },
            "required": [
                "name"
            ],
            "dependencies": {
                "identifier": {
                    "not": {
                        "required": [
                            "url"
                        ]
                    }
                }
            },
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "server": {
            "$comment": "https://spec.openapis.org/oas/v3.1#server-object",
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/server-variable"
                    }
                }
            },
            "required": [
                "url"
            ],
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "server-variable": {
            "$comment": "https://spec.openapis.org/oas/v3.1#server-variable-object",
            "type": "object",
            "properties": {
                "enum": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1
                },
                "default": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "required": [
                "default"
            ],
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "components": {
            "$comment": "https://spec.openapis.org/oas/v3.1#components-object",
            "type": "object",
            "properties": {
                "schemas": {
                    "type": "object",
                    "additionalProperties": false,
                    "patternProperties": {
                        "^[a-zA-Z0-9\\.\\-_]+$": {
                            "$ref": "#/definitions/schema"
                        }
                    }
                },
                "responses": {
                    "type": "object",
                    "additionalProperties": false,
                    "patternProperties": {
                        "^[a-zA-Z0-9\\.\\-_]+$": {
                            "$ref": "#/definitions/response-or-reference"
                        }
                    },
                    "properties": {
                        "x-42c-local-strategy": {
                            "$ref": "#/definitions/X42cLocalStrategy"
                        }
                    }
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": false,
                    "patternProperties": {
                        "^[a-zA-Z0-9\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/parameter"
                                },
                                {
                                    "$ref": "#/definitions/reference"
                                }
                            ]
                        }
                    }
                },
                "examples": {
                    "type": "object",
                    "additionalProperties": false,
                    "patternProperties": {
                        "^[a-zA-Z0-9\\.\\-_]+$": {
                            "$ref": "#/definitions/example-or-reference"
                        }
                    }
                },
                "requestBodies": {
                    "type": "object",
                    "additionalProperties": false,
                    "patternProperties": {
                        "^[a-zA-Z0-9\\.\\-_]+$": {
                            "$ref": "#/definitions/request-body-or-reference"
                        }
                    }
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": false,
                    "patternProperties": {
                        "^[a-zA-Z0-9\\.\\-_]+$": {
                            "$ref": "#/definitions/header-or-reference"
                        }
                    }
                },
                "securitySchemes": {
                    "type": "object",
                    "additionalProperties": false,
                    "patternProperties": {
                        "^[a-zA-Z0-9\\.\\-_]+$": {
                            "$ref": "#/definitions/security-scheme-or-reference"
                        }
                    }
                },
                "links": {
                    "type": "object",
                    "additionalProperties": false,
                    "patternProperties": {
                        "^[a-zA-Z0-9\\.\\-_]+$": {
                            "$ref": "#/definitions/link-or-reference"
                        }
                    }
                },
                "callbacks": {
                    "type": "object",
                    "additionalProperties": false,
                    "patternProperties": {
                        "^[a-zA-Z0-9\\.\\-_]+$": {
                            "$ref": "#/definitions/callbacks-or-reference"
                        }
                    }
                },
                "pathItems": {
                    "type": "object",
                    "additionalProperties": false,
                    "patternProperties": {
                        "^[a-zA-Z0-9\\.\\-_]+$": {
                            "$ref": "#/definitions/path-item"
                        }
                    }
                }
            },
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "paths": {
            "$comment": "https://spec.openapis.org/oas/v3.1#paths-object",
            "type": "object",
            "patternProperties": {
                "^/": {
                    "$ref": "#/definitions/path-item"
                },
                "^x-": {}
            },
            "additionalProperties": false,
            "properties": {
                "x-42c-local-strategy": {
                    "$ref": "#/definitions/X42cLocalStrategy"
                }
            }
        },
        "path-item": {
            "$comment": "https://spec.openapis.org/oas/v3.1#path-item-object",
            "type": "object",
            "properties": {
                "$ref": {
                    "type": "string",
                    "format": "uri-reference"
                },
                "summary": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/server"
                    }
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/parameter"
                            },
                            {
                                "$ref": "#/definitions/reference"
                            }
                        ]
                    }
                },
                "get": {
                    "$ref": "#/definitions/operation"
                },
                "put": {
                    "$ref": "#/definitions/operation"
                },
                "post": {
                    "$ref": "#/definitions/operation"
                },
                "delete": {
                    "$ref": "#/definitions/operation"
                },
                "options": {
                    "$ref": "#/definitions/operation"
                },
                "head": {
                    "$ref": "#/definitions/operation"
                },
                "patch": {
                    "$ref": "#/definitions/operation"
                },
                "trace": {
                    "$ref": "#/definitions/operation"
                },
                "x-42c-local-strategy": {
                    "$ref": "#/definitions/X42cLocalStrategy"
                }
            },
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "operation": {
            "$comment": "https://spec.openapis.org/oas/v3.1#operation-object",
            "type": "object",
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "summary": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "externalDocs": {
                    "$ref": "#/definitions/external-documentation"
                },
                "operationId": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/parameter"
                            },
                            {
                                "$ref": "#/definitions/reference"
                            }
                        ]
                    }
                },
                "requestBody": {
                    "$ref": "#/definitions/request-body-or-reference"
                },
                "responses": {
                    "$ref": "#/definitions/responses"
                },
                "callbacks": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/callbacks-or-reference"
                    }
                },
                "deprecated": {
                    "default": false,
                    "type": "boolean"
                },
                "security": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/security-requirement"
                    }
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/server"
                    }
                },
                "x-42c-local-strategy": {
                    "$ref": "#/definitions/X42cLocalStrategy"
                },
                "x-42c-no-authentication": {
                    "$ref": "#/definitions/X42cNoAuthentication"
                },
                "x-42c-mtls": {
                    "$ref": "#/definitions/X42cMTLS"
                },
                "x-42c-sensitivity": {
                    "$ref": "#/definitions/X42cSensitivity"
                },
                "x-42c-weight-input": {
                    "$ref": "#/definitions/X42cWeightInput"
                },
                "x-42c-weight-output": {
                    "$ref": "#/definitions/X42cWeightOutput"
                },
                "x-42c-weight-parameters": {
                    "$ref": "#/definitions/X42cWeightParameters"
                },
                "x-42c-weight-requestBody": {
                    "$ref": "#/definitions/X42cWeightRequestBody"
                }
            },
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "external-documentation": {
            "$comment": "https://spec.openapis.org/oas/v3.1#external-documentation-object",
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "url": {
                    "type": "string",
                    "format": "uri"
                }
            },
            "required": [
                "url"
            ],
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "parameter": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "in": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean",
                    "default": false
                },
                "deprecated": {
                    "type": "boolean",
                    "default": false
                },
                "allowEmptyValue": {
                    "type": "boolean",
                    "default": false
                },
                "style": {
                    "type": "string"
                },
                "explode": {
                    "type": "boolean"
                },
                "allowReserved": {
                    "type": "boolean",
                    "default": false
                },
                "schema": {
                    "$ref": "#/definitions/schema-or-ref"
                },
                "content": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/media-type"
                    },
                    "minProperties": 1,
                    "maxProperties": 1
                },
                "example": {},
                "examples": {
                    "type": "object",
                    "additionalProperties": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/example"
                            },
                            {
                                "$ref": "#/definitions/reference"
                            }
                        ]
                    }
                }
            },
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false,
            "required": [
                "name",
                "in"
            ],
            "allOf": [
                {
                    "$ref": "#/definitions/ExampleXORExamples"
                },
                {
                    "$ref": "#/definitions/SchemaXORContent"
                },
                {
                    "$ref": "#/definitions/ParameterLocation"
                }
            ]
        },
        "ExampleXORExamples": {
            "description": "Example and examples are mutually exclusive",
            "not": {
                "required": [
                    "example",
                    "examples"
                ]
            }
        },
        "SchemaXORContent": {
            "description": "Schema and content are mutually exclusive, at least one is required",
            "not": {
                "required": [
                    "schema",
                    "content"
                ]
            },
            "oneOf": [
                {
                    "required": [
                        "schema"
                    ]
                },
                {
                    "required": [
                        "content"
                    ],
                    "description": "Some properties are not allowed if content is present",
                    "allOf": [
                        {
                            "not": {
                                "required": [
                                    "style"
                                ]
                            }
                        },
                        {
                            "not": {
                                "required": [
                                    "explode"
                                ]
                            }
                        },
                        {
                            "not": {
                                "required": [
                                    "allowReserved"
                                ]
                            }
                        },
                        {
                            "not": {
                                "required": [
                                    "example"
                                ]
                            }
                        },
                        {
                            "not": {
                                "required": [
                                    "examples"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        "ParameterLocation": {
            "description": "Parameter location",
            "oneOf": [
                {
                    "description": "Parameter in path",
                    "required": [
                        "required"
                    ],
                    "properties": {
                        "in": {
                            "enum": [
                                "path"
                            ]
                        },
                        "style": {
                            "enum": [
                                "matrix",
                                "label",
                                "simple"
                            ],
                            "default": "simple"
                        },
                        "required": {
                            "enum": [
                                true
                            ]
                        }
                    }
                },
                {
                    "description": "Parameter in query",
                    "properties": {
                        "in": {
                            "enum": [
                                "query"
                            ]
                        },
                        "style": {
                            "enum": [
                                "form",
                                "spaceDelimited",
                                "pipeDelimited",
                                "deepObject"
                            ],
                            "default": "form"
                        }
                    }
                },
                {
                    "description": "Parameter in header",
                    "properties": {
                        "in": {
                            "enum": [
                                "header"
                            ]
                        },
                        "style": {
                            "enum": [
                                "simple"
                            ],
                            "default": "simple"
                        }
                    }
                },
                {
                    "description": "Parameter in cookie",
                    "properties": {
                        "in": {
                            "enum": [
                                "cookie"
                            ]
                        },
                        "style": {
                            "enum": [
                                "form"
                            ],
                            "default": "form"
                        }
                    }
                }
            ]
        },
        "request-body": {
            "$comment": "https://spec.openapis.org/oas/v3.1#request-body-object",
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "content": {
                    "$ref": "#/definitions/content"
                },
                "required": {
                    "default": false,
                    "type": "boolean"
                }
            },
            "required": [
                "content"
            ],
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "request-body-or-reference": {
            "oneOf": [
                {
                    "$ref": "#/definitions/reference"
                },
                {
                    "$ref": "#/definitions/request-body"
                }
            ]
        },
        "content": {
            "$comment": "https://spec.openapis.org/oas/v3.1#fixed-fields-10",
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/media-type"
            },
            "propertyNames": {
                "format": "media-range"
            }
        },
        "media-type": {
            "$comment": "https://spec.openapis.org/oas/v3.1#media-type-object",
            "type": "object",
            "properties": {
                "schema": {
                    "$ref": "#/definitions/schema-or-ref"
                },
                "encoding": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/encoding"
                    }
                },
                "example": {},
                "examples": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/example-or-reference"
                    }
                }
            },
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "encoding": {
            "$comment": "https://spec.openapis.org/oas/v3.1#encoding-object",
            "type": "object",
            "properties": {
                "contentType": {
                    "type": "string",
                    "format": "media-range"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/header-or-reference"
                    }
                },
                "style": {
                    "default": "form",
                    "enum": [
                        "form",
                        "spaceDelimited",
                        "pipeDelimited",
                        "deepObject"
                    ]
                },
                "explode": {
                    "type": "boolean"
                },
                "allowReserved": {
                    "default": false,
                    "type": "boolean"
                }
            },
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "responses": {
            "$comment": "https://spec.openapis.org/oas/v3.1#responses-object",
            "type": "object",
            "properties": {
                "default": {
                    "$ref": "#/definitions/response-or-reference"
                },
                "x-42c-local-strategy": {
                    "$ref": "#/definitions/X42cLocalStrategy"
                }
            },
            "patternProperties": {
                "^[1-5](?:[0-9]{2}|XX)$": {
                    "$ref": "#/definitions/response-or-reference"
                },
                "^x-": {}
            },
            "minProperties": 1,
            "additionalProperties": false
        },
        "response": {
            "$comment": "https://spec.openapis.org/oas/v3.1#response-object",
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/header-or-reference"
                    }
                },
                "content": {
                    "$ref": "#/definitions/content"
                },
                "links": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/link-or-reference"
                    }
                },
                "x-42c-local-strategy": {
                    "$ref": "#/definitions/X42cLocalStrategy"
                },
                "x-42c-weight-content": {
                    "$ref": "#/definitions/X42cWeightContent"
                },
                "x-42c-weight-headers": {
                    "$ref": "#/definitions/X42cWeightHeader"
                },
                "x-42c-weight-success": {
                    "$ref": "#/definitions/X42cWeightSuccess"
                },
                "x-42c-weight-fail": {
                    "$ref": "#/definitions/X42cWeightFail"
                }
            },
            "required": [
                "description"
            ],
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "response-or-reference": {
            "oneOf": [
                {
                    "$ref": "#/definitions/reference"
                },
                {
                    "$ref": "#/definitions/response"
                }
            ]
        },
        "callbacks": {
            "$comment": "https://spec.openapis.org/oas/v3.1#callback-object",
            "type": "object",
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": {
                "$ref": "#/definitions/path-item"
            }
        },
        "callbacks-or-reference": {
            "oneOf": [
                {
                    "$ref": "#/definitions/reference"
                },
                {
                    "$ref": "#/definitions/callbacks"
                }
            ]
        },
        "example": {
            "$comment": "https://spec.openapis.org/oas/v3.1#example-object",
            "type": "object",
            "properties": {
                "summary": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "value": {},
                "externalValue": {
                    "type": "string",
                    "format": "uri"
                }
            },
            "not": {
                "required": [
                    "value",
                    "externalValue"
                ]
            },
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "example-or-reference": {
            "oneOf": [
                {
                    "$ref": "#/definitions/reference"
                },
                {
                    "$ref": "#/definitions/example"
                }
            ]
        },
        "link": {
            "$comment": "https://spec.openapis.org/oas/v3.1#link-object",
            "type": "object",
            "properties": {
                "operationRef": {
                    "type": "string",
                    "format": "uri-reference"
                },
                "operationId": {
                    "type": "string"
                },
                "parameters": {
                    "$ref": "#/definitions/map-of-strings"
                },
                "requestBody": true,
                "description": {
                    "type": "string"
                },
                "body": {
                    "$ref": "#/definitions/server"
                }
            },
            "oneOf": [
                {
                    "required": [
                        "operationRef"
                    ]
                },
                {
                    "required": [
                        "operationId"
                    ]
                }
            ],
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "link-or-reference": {
            "oneOf": [
                {
                    "$ref": "#/definitions/reference"
                },
                {
                    "$ref": "#/definitions/link"
                }
            ]
        },
        "header": {
            "$comment": "https://spec.openapis.org/oas/v3.1#header-object",
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "required": {
                    "default": false,
                    "type": "boolean"
                },
                "deprecated": {
                    "default": false,
                    "type": "boolean"
                },
                "schema": {
                    "$ref": "#/definitions/schema-or-ref"
                },
                "content": {
                    "$ref": "#/definitions/content",
                    "minProperties": 1,
                    "maxProperties": 1
                }
            },
            "oneOf": [
                {
                    "required": [
                        "schema"
                    ]
                },
                {
                    "required": [
                        "content"
                    ]
                }
            ],
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "header-or-reference": {
            "oneOf": [
                {
                    "$ref": "#/definitions/reference"
                },
                {
                    "$ref": "#/definitions/header"
                }
            ]
        },
        "tag": {
            "$comment": "https://spec.openapis.org/oas/v3.1#tag-object",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "externalDocs": {
                    "$ref": "#/definitions/external-documentation"
                }
            },
            "required": [
                "name"
            ],
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "reference": {
            "$comment": "https://spec.openapis.org/oas/v3.1#reference-object",
            "type": "object",
            "properties": {
                "$ref": {
                    "type": "string",
                    "format": "uri-reference"
                },
                "summary": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "required": [
                "$ref"
            ],
            "additionalProperties": false
        },
        "schema-or-ref": {
            "oneOf": [
                {
                    "$ref": "#/definitions/reference"
                },
                {
                    "$ref": "#/definitions/schema"
                }
            ]
        },
        "schema": {
            "$comment": "Schema following JSON Schema Draft 2020-12 core and validation vocabularies",
            "anyOf": [
                {
                    "type": "object",
                    "properties": {
                        "$comment": {
                            "type": "string"
                        },
                        "allOf": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schema-or-ref"
                            }
                        },
                        "anyOf": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schema-or-ref"
                            }
                        },
                        "oneOf": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schema-or-ref"
                            }
                        },
                        "not": {
                            "$ref": "#/definitions/schema-or-ref"
                        },
                        "if": {
                            "$ref": "#/definitions/schema-or-ref"
                        },
                        "then": {
                            "$ref": "#/definitions/schema-or-ref"
                        },
                        "else": {
                            "$ref": "#/definitions/schema-or-ref"
                        },
                        "type": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "enum": [
                                        "array",
                                        "boolean",
                                        "integer",
                                        "null",
                                        "number",
                                        "object",
                                        "string"
                                    ]
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "array",
                                            "boolean",
                                            "integer",
                                            "null",
                                            "number",
                                            "object",
                                            "string"
                                        ]
                                    },
                                    "minItems": 1,
                                    "uniqueItems": true
                                }
                            ]
                        },
                        "enum": {
                            "type": "array"
                        },
                        "const": true,
                        "multipleOf": {
                            "type": "number",
                            "minimum": 0,
                            "exclusiveMinimum": true
                        },
                        "maximum": {
                            "type": "number"
                        },
                        "exclusiveMaximum": {
                            "type": "number"
                        },
                        "minimum": {
                            "type": "number"
                        },
                        "exclusiveMinimum": {
                            "type": "number"
                        },
                        "maxLength": {
                            "type": "integer",
                            "minimum": 0
                        },
                        "minLength": {
                            "type": "integer",
                            "minimum": 0
                        },
                        "pattern": {
                            "type": "string",
                            "format": "regex"
                        },
                        "format": {
                            "type": "string"
                        },
                        "items": {
                            "$ref": "#/definitions/schema-or-ref"
                        },
                        "prefixItems": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schema-or-ref"
                            }
                        },
                        "unevaluatedItems": {
                            "$ref": "#/definitions/schema-or-ref"
                        },
                        "maxItems": {
                            "type": "integer",
                            "minimum": 0
                        },
                        "minItems": {
                            "type": "integer",
                            "minimum": 0
                        },
                        "uniqueItems": {
                            "type": "boolean"
                        },
                        "maxContains": {
                            "type": "integer",
                            "minimum": 0
                        },
                        "minContains": {
                            "type": "integer",
                            "minimum": 0
                        },
                        "contains": {
                            "$ref": "#/definitions/schema-or-ref"
                        },
                        "maxProperties": {
                            "type": "integer",
                            "minimum": 0
                        },
                        "minProperties": {
                            "type": "integer",
                            "minimum": 0
                        },
                        "required": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "uniqueItems": true
                        },
                        "unevaluatedProperties": {
                            "$ref": "#/definitions/schema-or-ref"
                        },
                        "dependentRequired": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "uniqueItems": true
                            }
                        },
                        "dependentSchemas": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/schema-or-ref"
                            }
                        },
                        "properties": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/schema-or-ref"
                            }
                        },
                        "patternProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/schema-or-ref"
                            },
                            "propertyNames": {
                                "format": "regex"
                            }
                        },
                        "additionalProperties": {
                            "$ref": "#/definitions/schema-or-ref"
                        },
                        "propertyNames": {
                            "$ref": "#/definitions/schema-or-ref"
                        },
                        "discriminator": {
                            "$ref": "#/definitions/discriminator"
                        },
                        "title": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "default": true,
                        "deprecated": {
                            "type": "boolean"
                        },
                        "readOnly": {
                            "type": "boolean"
                        },
                        "writeOnly": {
                            "type": "boolean"
                        },
                        "examples": {
                            "type": "array"
                        },
                        "example": true,
                        "contentMediaType": {
                            "type": "string"
                        },
                        "contentEncoding": {
                            "type": "string"
                        },
                        "contentSchema": {
                            "$ref": "#/definitions/schema"
                        },
                        "x-42c-sensitivity-data": {
                            "$ref": "#/definitions/X42cSensitivityData"
                        }
                    },
                    "patternProperties": {
                        "^x-": true
                    },
                    "additionalProperties": false
                },
                {
                    "type": "boolean"
                }
            ]
        },
        "security-scheme": {
            "oneOf": [
                {
                    "$ref": "#/definitions/APIKeySecurityScheme"
                },
                {
                    "$ref": "#/definitions/HTTPSecurityScheme"
                },
                {
                    "$ref": "#/definitions/OAuth2SecurityScheme"
                },
                {
                    "$ref": "#/definitions/OpenIdConnectSecurityScheme"
                },
                {
                    "$ref": "#/definitions/MutualTLSSecurityScheme"
                }
            ]
        },
        "APIKeySecurityScheme": {
            "type": "object",
            "required": [
                "type",
                "name",
                "in"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "apiKey"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "in": {
                    "type": "string",
                    "enum": [
                        "header",
                        "query",
                        "cookie"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "HTTPSecurityScheme": {
            "type": "object",
            "required": [
                "scheme",
                "type"
            ],
            "properties": {
                "scheme": {
                    "type": "string"
                },
                "bearerFormat": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "http"
                    ]
                }
            },
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false,
            "oneOf": [
                {
                    "description": "Bearer",
                    "properties": {
                        "scheme": {
                            "type": "string",
                            "pattern": "^[Bb][Ee][Aa][Rr][Ee][Rr]$"
                        }
                    }
                },
                {
                    "description": "Non Bearer",
                    "not": {
                        "required": [
                            "bearerFormat"
                        ]
                    },
                    "properties": {
                        "scheme": {
                            "not": {
                                "type": "string",
                                "pattern": "^[Bb][Ee][Aa][Rr][Ee][Rr]$"
                            }
                        }
                    }
                }
            ]
        },
        "OAuth2SecurityScheme": {
            "type": "object",
            "required": [
                "type",
                "flows"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "oauth2"
                    ]
                },
                "flows": {
                    "$ref": "#/definitions/OAuthFlows"
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "OAuthFlows": {
            "type": "object",
            "properties": {
                "implicit": {
                    "$ref": "#/definitions/ImplicitOAuthFlow"
                },
                "password": {
                    "$ref": "#/definitions/PasswordOAuthFlow"
                },
                "clientCredentials": {
                    "$ref": "#/definitions/ClientCredentialsFlow"
                },
                "authorizationCode": {
                    "$ref": "#/definitions/AuthorizationCodeOAuthFlow"
                }
            },
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "ImplicitOAuthFlow": {
            "type": "object",
            "required": [
                "authorizationUrl",
                "scopes"
            ],
            "properties": {
                "authorizationUrl": {
                    "type": "string",
                    "format": "uri-reference"
                },
                "refreshUrl": {
                    "type": "string",
                    "format": "uri-reference"
                },
                "scopes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "PasswordOAuthFlow": {
            "type": "object",
            "required": [
                "tokenUrl",
                "scopes"
            ],
            "properties": {
                "tokenUrl": {
                    "type": "string",
                    "format": "uri-reference"
                },
                "refreshUrl": {
                    "type": "string",
                    "format": "uri-reference"
                },
                "scopes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "ClientCredentialsFlow": {
            "type": "object",
            "required": [
                "tokenUrl",
                "scopes"
            ],
            "properties": {
                "tokenUrl": {
                    "type": "string",
                    "format": "uri-reference"
                },
                "refreshUrl": {
                    "type": "string",
                    "format": "uri-reference"
                },
                "scopes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "AuthorizationCodeOAuthFlow": {
            "type": "object",
            "required": [
                "authorizationUrl",
                "tokenUrl",
                "scopes"
            ],
            "properties": {
                "authorizationUrl": {
                    "type": "string",
                    "format": "uri-reference"
                },
                "tokenUrl": {
                    "type": "string",
                    "format": "uri-reference"
                },
                "refreshUrl": {
                    "type": "string",
                    "format": "uri-reference"
                },
                "scopes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "OpenIdConnectSecurityScheme": {
            "type": "object",
            "required": [
                "type",
                "openIdConnectUrl"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "openIdConnect"
                    ]
                },
                "openIdConnectUrl": {
                    "type": "string",
                    "format": "uri-reference"
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "MutualTLSSecurityScheme": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "mutualTLS"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "security-scheme-or-reference": {
            "oneOf": [
                {
                    "$ref": "#/definitions/reference"
                },
                {
                    "$ref": "#/definitions/security-scheme"
                }
            ]
        },
        "oauth-flows": {
            "type": "object",
            "properties": {
                "implicit": {
                    "$ref": "#/definitions/oauth-flows-implicit"
                },
                "password": {
                    "$ref": "#/definitions/oauth-flows-password"
                },
                "clientCredentials": {
                    "$ref": "#/definitions/oauth-flows-client-credentials"
                },
                "authorizationCode": {
                    "$ref": "#/definitions/oauth-flows-authorization-code"
                }
            },
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "oauth-flows-implicit": {
            "type": "object",
            "properties": {
                "authorizationUrl": {
                    "type": "string",
                    "format": "uri"
                },
                "refreshUrl": {
                    "type": "string",
                    "format": "uri"
                },
                "scopes": {
                    "$ref": "#/definitions/map-of-strings"
                }
            },
            "required": [
                "authorizationUrl",
                "scopes"
            ],
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "oauth-flows-password": {
            "type": "object",
            "properties": {
                "tokenUrl": {
                    "type": "string",
                    "format": "uri"
                },
                "refreshUrl": {
                    "type": "string",
                    "format": "uri"
                },
                "scopes": {
                    "$ref": "#/definitions/map-of-strings"
                }
            },
            "required": [
                "tokenUrl",
                "scopes"
            ],
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "oauth-flows-client-credentials": {
            "type": "object",
            "properties": {
                "tokenUrl": {
                    "type": "string",
                    "format": "uri"
                },
                "refreshUrl": {
                    "type": "string",
                    "format": "uri"
                },
                "scopes": {
                    "$ref": "#/definitions/map-of-strings"
                }
            },
            "required": [
                "tokenUrl",
                "scopes"
            ],
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "oauth-flows-authorization-code": {
            "type": "object",
            "properties": {
                "authorizationUrl": {
                    "type": "string",
                    "format": "uri"
                },
                "tokenUrl": {
                    "type": "string",
                    "format": "uri"
                },
                "refreshUrl": {
                    "type": "string",
                    "format": "uri"
                },
                "scopes": {
                    "$ref": "#/definitions/map-of-strings"
                }
            },
            "required": [
                "authorizationUrl",
                "tokenUrl",
                "scopes"
            ],
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "security-requirement": {
            "$comment": "https://spec.openapis.org/oas/v3.1#security-requirement-object",
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "examples": {
            "properties": {
                "example": {},
                "examples": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/example-or-reference"
                    }
                }
            }
        },
        "map-of-strings": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "styles-for-form": {
            "if": {
                "properties": {
                    "style": {
                        "const": "form"
                    }
                },
                "required": [
                    "style"
                ]
            },
            "then": {
                "properties": {
                    "explode": {
                        "default": true
                    }
                }
            },
            "else": {
                "properties": {
                    "explode": {
                        "default": false
                    }
                }
            }
        },
        "discriminator": {
            "$comment": "https://spec.openapis.org/oas/v3.1#discriminator-object",
            "type": "object",
            "required": [
                "propertyName"
            ],
            "properties": {
                "propertyName": {
                    "type": "string"
                },
                "mapping": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "patternProperties": {
                "^x-": {}
            },
            "additionalProperties": false
        },
        "X42cLocalStrategy": {
            "type": "object",
            "properties": {
                "x-42c-strategy": {
                    "$ref": "#/definitions/X42cStrategy"
                }
            }
        },
        "X42cRequestStrategies": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "operations": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "get",
                                "put",
                                "post",
                                "delete",
                                "options",
                                "head",
                                "patch",
                                "trace"
                            ]
                        }
                    },
                    "x-42c-strategy": {
                        "$ref": "#/definitions/X42cStrategy"
                    }
                }
            }
        },
        "X42cResponseStrategies": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "responses": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "pattern": "^([1-5](?:\\d{2}|XX)|default)$"
                        }
                    },
                    "x-42c-strategy": {
                        "$ref": "#/definitions/X42cStrategy"
                    }
                }
            }
        },
        "X42cStrategy": {
            "type": "object",
            "properties": {
                "protections": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/X42cDeactivateAllowList"
                            },
                            {
                                "$ref": "#/definitions/x-42c-access-control-based-on-ip-range_0.1"
                            },
                            {
                                "$ref": "#/definitions/x-42c-forward-client-certificate_0.1"
                            },
                            {
                                "$ref": "#/definitions/x-42c-ip-allowlist_0.1"
                            },
                            {
                                "$ref": "#/definitions/x-42c-jws-validation_0.1"
                            },
                            {
                                "$ref": "#/definitions/x-42c-request-allowlist_0.1"
                            },
                            {
                                "$ref": "#/definitions/x-42c-request-limiter-based-on-ip_0.1"
                            },
                            {
                                "$ref": "#/definitions/x-42c-request-limiter_0.1"
                            },
                            {
                                "$ref": "#/definitions/x-42c-response-allowlist_0.1"
                            },
                            {
                                "$ref": "#/definitions/x-42c-security-headers_0.1"
                            },
                            {
                                "$ref": "#/definitions/x-42c-set-client-ip_0.1"
                            },
                            {
                                "$ref": "#/definitions/x-42c-jwt-validation-ec_0.1"
                            },
                            {
                                "$ref": "#/definitions/x-42c-jwt-validation-ec_0.2"
                            },
                            {
                                "$ref": "#/definitions/x-42c-jwt-validation-ec_0.3"
                            },
                            {
                                "$ref": "#/definitions/x-42c-jwt-validation-hmac_0.1"
                            },
                            {
                                "$ref": "#/definitions/x-42c-jwt-validation-hmac_0.2"
                            },
                            {
                                "$ref": "#/definitions/x-42c-jwt-validation-hmac_0.3"
                            },
                            {
                                "$ref": "#/definitions/x-42c-jwt-validation-no-sig-check_0.1"
                            },
                            {
                                "$ref": "#/definitions/x-42c-jwt-validation-no-sig-check_0.3"
                            },
                            {
                                "$ref": "#/definitions/x-42c-jwt-validation-rsa-no-sig-check_0.1"
                            },
                            {
                                "$ref": "#/definitions/x-42c-jwt-validation-rsa-no-sig-check_0.3"
                            },
                            {
                                "$ref": "#/definitions/x-42c-jwt-validation-rsa_0.1"
                            },
                            {
                                "$ref": "#/definitions/x-42c-jwt-validation-rsa_0.2"
                            },
                            {
                                "$ref": "#/definitions/x-42c-jwt-validation-rsa_0.3"
                            },
                            {
                                "$ref": "#/definitions/x-42c-jwt-validation_0.1"
                            },
                            {
                                "$ref": "#/definitions/x-42c-jwt-validation_0.2"
                            },
                            {
                                "$ref": "#/definitions/x-42c-jwt-validation_0.3"
                            }
                        ]
                    }
                }
            }
        },
        "X42cNoAuthentication": {
            "type": "boolean",
            "default": false
        },
        "X42cMTLS": {
            "type": "boolean",
            "default": false
        },
        "X42cSensitivity": {
            "type": "integer",
            "minimum": 1,
            "maximum": 5,
            "default": 3
        },
        "X42cSensitivityData": {
            "type": "integer",
            "minimum": 1,
            "maximum": 5,
            "default": 3
        },
        "X42cSkipIssues": {
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "X42cWeightContent": {
            "type": "integer",
            "default": 80,
            "maximum": 100,
            "minimum": 0
        },
        "X42cWeightHeader": {
            "type": "integer",
            "default": 20,
            "maximum": 100,
            "minimum": 0
        },
        "X42cWeightSuccess": {
            "type": "integer",
            "default": 70,
            "maximum": 100,
            "minimum": 0
        },
        "X42cWeightFail": {
            "type": "integer",
            "default": 30,
            "maximum": 100,
            "minimum": 0
        },
        "X42cWeightInput": {
            "type": "integer",
            "default": 80,
            "maximum": 100,
            "minimum": 0
        },
        "X42cWeightOutput": {
            "type": "integer",
            "default": 20,
            "maximum": 100,
            "minimum": 0
        },
        "X42cWeightParameters": {
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 0
        },
        "X42cWeightRequestBody": {
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 0
        },
        "X42cSample": {
            "additionalProperties": true,
            "additionalItems": true
        },
        "X42cDeactivateAllowList": {
            "type": "object",
            "required": [
                "x-42c-deactivate-allowlist"
            ],
            "properties": {
                "x-42c-deactivate-allowlist": {
                    "type": "boolean",
                    "default": false
                }
            },
            "additionalProperties": false
        },
        "x-42c-access-control-based-on-ip-range_0.1": {
            "type": "object",
            "required": [
                "x-42c-access-control-based-on-ip-range_0.1"
            ],
            "properties": {
                "x-42c-access-control-based-on-ip-range_0.1": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                        "ip.range.list"
                    ],
                    "properties": {
                        "ip.range.list": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "minItems": 1,
                            "maxItems": 10,
                            "additionalItems": false,
                            "description": "IP Range list"
                        }
                    },
                    "description": "Access Control based on IP"
                }
            },
            "additionalProperties": false
        },
        "x-42c-forward-client-certificate_0.1": {
            "type": "object",
            "required": [
                "x-42c-forward-client-certificate_0.1"
            ],
            "properties": {
                "x-42c-forward-client-certificate_0.1": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                        "backend.header.name"
                    ],
                    "properties": {
                        "backend.header.name": {
                            "type": "string",
                            "pattern": "",
                            "minLength": 1,
                            "maxLength": 9999,
                            "description": "Client certificate"
                        }
                    },
                    "description": "Forward client certificate to backend service"
                }
            },
            "additionalProperties": false
        },
        "x-42c-ip-allowlist_0.1": {
            "type": "object",
            "required": [
                "x-42c-ip-allowlist_0.1"
            ],
            "properties": {
                "x-42c-ip-allowlist_0.1": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                        "ip.allow.list"
                    ],
                    "properties": {
                        "ip.allow.list": {
                            "type": "array",
                            "additionalItems": false,
                            "items": {
                                "type": "string",
                                "pattern": "[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}",
                                "minLength": 7,
                                "maxLength": 15
                            }
                        }
                    },
                    "description": "Automatic allowlist protection based on the client ip"
                }
            },
            "additionalProperties": false
        },
        "x-42c-jws-validation_0.1": {
            "type": "object",
            "required": [
                "x-42c-jws-validation_0.1"
            ],
            "properties": {
                "x-42c-jws-validation_0.1": {
                    "type": "object",
                    "properties": {
                        "header.name": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "Header name"
                        },
                        "jp.signed.data": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 500,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "Signed data"
                        },
                        "jwk.envvar": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "JWK env variable name",
                            "default": "JWK"
                        },
                        "authorized.algorithms": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "HS256",
                                    "HS384",
                                    "HS512",
                                    "RS256",
                                    "RS384",
                                    "RS512",
                                    "PS256",
                                    "PS384",
                                    "PS512",
                                    "ES256",
                                    "ES384",
                                    "ES512"
                                ]
                            },
                            "description": "Authorized algorithms"
                        },
                        "jp.jose.header.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer jose header schema"
                        },
                        "jose.header.schema": {
                            "type": "object",
                            "description": "JOSE header schema"
                        }
                    },
                    "required": [
                        "header.name",
                        "authorized.algorithms"
                    ],
                    "additionalProperties": false,
                    "description": "JWS validation"
                }
            },
            "additionalProperties": false
        },
        "x-42c-request-allowlist_0.1": {
            "type": "object",
            "required": [
                "x-42c-request-allowlist_0.1"
            ],
            "properties": {
                "x-42c-request-allowlist_0.1": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {},
                    "description": "Automatic allowlist protection on the incoming request sent by the client"
                }
            },
            "additionalProperties": false
        },
        "x-42c-request-limiter-based-on-ip_0.1": {
            "type": "object",
            "required": [
                "x-42c-request-limiter-based-on-ip_0.1"
            ],
            "properties": {
                "x-42c-request-limiter-based-on-ip_0.1": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                        "hits",
                        "window"
                    ],
                    "properties": {
                        "hits": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 999999999,
                            "description": "Max request number"
                        },
                        "window": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 999999999,
                            "description": "Window"
                        },
                        "burst.enabled": {
                            "type": "boolean",
                            "description": "Activate 'burst'",
                            "default": false
                        },
                        "burst.hits": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 999999999,
                            "description": "Max burst request number",
                            "default": 5
                        },
                        "burst.window": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 999999999,
                            "description": "Burst window size",
                            "default": 2
                        },
                        "cache.name": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_]{1,255}$",
                            "description": "Cache name",
                            "default": "default"
                        },
                        "cache.type": {
                            "type": "string",
                            "enum": [
                                "MEMORY"
                            ],
                            "description": "Cache type",
                            "default": "MEMORY"
                        },
                        "add.retry_after": {
                            "type": "boolean",
                            "description": "Add 'Retry-After' header",
                            "default": false
                        }
                    },
                    "description": "Request limiter"
                }
            },
            "additionalProperties": false
        },
        "x-42c-request-limiter_0.1": {
            "type": "object",
            "required": [
                "x-42c-request-limiter_0.1"
            ],
            "properties": {
                "x-42c-request-limiter_0.1": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                        "key"
                    ],
                    "properties": {
                        "hits": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 999999999,
                            "description": "Max request number"
                        },
                        "window": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 999999999,
                            "description": "Window"
                        },
                        "burst.enabled": {
                            "type": "boolean",
                            "description": "Activate 'burst'",
                            "default": false
                        },
                        "burst.hits": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 999999999,
                            "description": "Max burst request number",
                            "default": 5
                        },
                        "burst.window": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 999999999,
                            "description": "Burst window size",
                            "default": 2
                        },
                        "cache.name": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_]{1,255}$",
                            "description": "Cache name",
                            "default": "default"
                        },
                        "cache.type": {
                            "type": "string",
                            "enum": [
                                "MEMORY"
                            ],
                            "description": "Cache type",
                            "default": "MEMORY"
                        },
                        "key": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9_]{1,255}$",
                            "description": "Key"
                        },
                        "add.retry_after": {
                            "type": "boolean",
                            "description": "Add 'Retry-After' header",
                            "default": false
                        }
                    },
                    "description": "Request limiter"
                }
            },
            "additionalProperties": false
        },
        "x-42c-response-allowlist_0.1": {
            "type": "object",
            "required": [
                "x-42c-response-allowlist_0.1"
            ],
            "properties": {
                "x-42c-response-allowlist_0.1": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {},
                    "description": "Automatic allowlist protection on the response sent by the backend service"
                }
            },
            "additionalProperties": false
        },
        "x-42c-security-headers_0.1": {
            "type": "object",
            "required": [
                "x-42c-security-headers_0.1"
            ],
            "properties": {
                "x-42c-security-headers_0.1": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                        "mode"
                    ],
                    "properties": {
                        "hsts.max_age": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 999999999,
                            "description": "HSTS max age",
                            "default": 3600
                        },
                        "csp.policy": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 1000,
                            "description": "Content Security Policy",
                            "default": "default-src: 'self'; upgrade-insecure-requests; referrer no-referrer"
                        },
                        "mode": {
                            "type": "string",
                            "enum": [
                                "add-only",
                                "add-replace"
                            ],
                            "description": "Mode",
                            "default": "add-only"
                        },
                        "remove.headers": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "minItems": 0,
                            "maxItems": 99,
                            "additionalItems": false,
                            "description": "Headers to remove",
                            "default": [
                                "X-Powered-By",
                                "X-AspNet-Version",
                                "X-AspNetMvc-Version"
                            ]
                        }
                    },
                    "description": "Add HTTP security headers in response"
                }
            },
            "additionalProperties": false
        },
        "x-42c-set-client-ip_0.1": {
            "type": "object",
            "required": [
                "x-42c-set-client-ip_0.1"
            ],
            "properties": {
                "x-42c-set-client-ip_0.1": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                        "ip.header.name",
                        "ip.header.mandatory"
                    ],
                    "properties": {
                        "ip.header.name": {
                            "type": "string",
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z_\\-]+$",
                            "description": "IP Header name"
                        },
                        "ip.header.mandatory": {
                            "type": "boolean",
                            "description": "IP Header must be present ",
                            "default": true
                        },
                        "remote.ip.allowlist": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 10,
                                "maxLength": 255
                            },
                            "maxItems": 10,
                            "description": "IPs/Network addresses of trusted network frontends",
                            "default": []
                        }
                    },
                    "description": "Set Client IP"
                }
            },
            "additionalProperties": false
        },
        "x-42c-jwt-validation-ec_0.1": {
            "type": "object",
            "required": [
                "x-42c-jwt-validation-ec_0.1"
            ],
            "properties": {
                "x-42c-jwt-validation-ec_0.1": {
                    "type": "object",
                    "properties": {
                        "header.name": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "Header name"
                        },
                        "jwk.envvar": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "JWK env variable name",
                            "default": "JWK"
                        },
                        "forward.jwt": {
                            "type": "boolean",
                            "description": "Forward the JWT to backend",
                            "default": true
                        },
                        "lifetime": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 99999999,
                            "description": "Token lifetime (seconds)",
                            "default": 5
                        },
                        "drift": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 86400,
                            "description": "Drift time (in seconds)",
                            "default": 10
                        },
                        "jti.timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 99999999,
                            "description": "JTI timeout (seconds)",
                            "default": 86400
                        },
                        "jp.claims.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer claims schema"
                        },
                        "claims.schema": {
                            "type": "object",
                            "description": "Claims schema"
                        },
                        "jp.jose.header.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer jose header schema"
                        },
                        "jose.header.schema": {
                            "type": "object",
                            "description": "JOSE header schema"
                        }
                    },
                    "required": [
                        "header.name"
                    ],
                    "additionalProperties": false,
                    "description": "JWT Elliptic Curve validation"
                }
            },
            "additionalProperties": false
        },
        "x-42c-jwt-validation-ec_0.2": {
            "type": "object",
            "required": [
                "x-42c-jwt-validation-ec_0.2"
            ],
            "properties": {
                "x-42c-jwt-validation-ec_0.2": {
                    "type": "object",
                    "properties": {
                        "header.name": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "Header name"
                        },
                        "allow.basic.value": {
                            "type": "boolean",
                            "description": "Is Basic or Digest Allowed",
                            "default": false
                        },
                        "jwk.envvar": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "JWK env variable name",
                            "default": "JWK"
                        },
                        "jwks.uri": {
                            "schema": {
                                "type": "string",
                                "pattern": "((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[.\\!/\\w]*))?)",
                                "minLength": 1,
                                "maxLength": 500
                            },
                            "description": "JWKS endpoint"
                        },
                        "forward.jwt": {
                            "type": "boolean",
                            "description": "Forward the JWT to backend",
                            "default": true
                        },
                        "lifetime": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 99999999,
                            "description": "Token lifetime (seconds)",
                            "default": 5
                        },
                        "drift": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 86400,
                            "description": "Drift time (in seconds)",
                            "default": 10
                        },
                        "jti.timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 99999999,
                            "description": "JTI timeout (seconds)",
                            "default": 86400
                        },
                        "jp.claims.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer claims schema"
                        },
                        "claims.schema": {
                            "type": "object",
                            "description": "Claims schema"
                        },
                        "jp.jose.header.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer jose header schema"
                        },
                        "jose.header.schema": {
                            "type": "object",
                            "description": "JOSE header schema"
                        },
                        "jwk.cache.timeout": {
                            "type": "number",
                            "minimum": 60,
                            "maximum": 28000,
                            "description": "Cache expiration time for JWK entry",
                            "default": 3600
                        }
                    },
                    "required": [
                        "header.name"
                    ],
                    "additionalProperties": false,
                    "description": "JWT Elliptic Curve validation"
                }
            },
            "additionalProperties": false
        },
        "x-42c-jwt-validation-ec_0.3": {
            "type": "object",
            "required": [
                "x-42c-jwt-validation-ec_0.3"
            ],
            "properties": {
                "x-42c-jwt-validation-ec_0.3": {
                    "type": "object",
                    "properties": {
                        "header.name": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "Header name"
                        },
                        "allow.basic.value": {
                            "type": "boolean",
                            "description": "Is Basic or Digest Allowed",
                            "default": false
                        },
                        "jwk.envvar": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "JWK env variable name",
                            "default": "JWK"
                        },
                        "jwks.uri": {
                            "schema": {
                                "type": "string",
                                "pattern": "^(?:https?://\\w+(?:[\\-.]\\w+)*(?::\\d+)?/(?:\\.?\\w[\\w\\-./+%]*)?(?:[?;][\\w\\-./+%&=;,@]*)?)$",
                                "minLength": 9,
                                "maxLength": 500
                            },
                            "description": "JWKS endpoint"
                        },
                        "jwks.proxy": {
                            "schema": {
                                "type": "string",
                                "pattern": "^(?:\\w+(?:[\\-.]\\w+)*:\\d+)$",
                                "minLength": 3,
                                "maxLength": 250
                            },
                            "description": "JWKS connect proxy"
                        },
                        "forward.jwt": {
                            "type": "boolean",
                            "description": "Forward the JWT to backend",
                            "default": true
                        },
                        "lifetime": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 99999999,
                            "description": "Token lifetime (seconds)",
                            "default": 5
                        },
                        "drift": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 86400,
                            "description": "Drift time (in seconds)",
                            "default": 10
                        },
                        "jti.timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 99999999,
                            "description": "JTI timeout (seconds)",
                            "default": 86400
                        },
                        "jp.claims.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer claims schema"
                        },
                        "claims.schema": {
                            "type": "object",
                            "description": "Claims schema"
                        },
                        "jp.jose.header.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer jose header schema"
                        },
                        "jose.header.schema": {
                            "type": "object",
                            "description": "JOSE header schema"
                        },
                        "jwk.cache.timeout": {
                            "type": "number",
                            "minimum": 60,
                            "maximum": 28000,
                            "description": "Cache expiration time for JWK entry",
                            "default": 3600
                        }
                    },
                    "required": [
                        "header.name"
                    ],
                    "additionalProperties": false,
                    "description": "JWT Elliptic Curve validation"
                }
            },
            "additionalProperties": false
        },
        "x-42c-jwt-validation-hmac_0.1": {
            "type": "object",
            "required": [
                "x-42c-jwt-validation-hmac_0.1"
            ],
            "properties": {
                "x-42c-jwt-validation-hmac_0.1": {
                    "type": "object",
                    "properties": {
                        "header.name": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "Header name"
                        },
                        "jwk.envvar": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "JWK env variable name",
                            "default": "JWK"
                        },
                        "forward.jwt": {
                            "type": "boolean",
                            "description": "Forward the JWT to backend",
                            "default": true
                        },
                        "lifetime": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 99999999,
                            "description": "Token lifetime (seconds)",
                            "default": 5
                        },
                        "drift": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 86400,
                            "description": "Drift time (in seconds)",
                            "default": 10
                        },
                        "jti.timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 99999999,
                            "description": "JTI timeout (seconds)",
                            "default": 86400
                        },
                        "jp.claims.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer claims schema"
                        },
                        "claims.schema": {
                            "type": "object",
                            "description": "Claims schema"
                        },
                        "jp.jose.header.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer jose header schema"
                        },
                        "jose.header.schema": {
                            "type": "object",
                            "description": "JOSE header schema"
                        }
                    },
                    "required": [
                        "header.name"
                    ],
                    "additionalProperties": false,
                    "description": "JWT HMAC validation"
                }
            },
            "additionalProperties": false
        },
        "x-42c-jwt-validation-hmac_0.2": {
            "type": "object",
            "required": [
                "x-42c-jwt-validation-hmac_0.2"
            ],
            "properties": {
                "x-42c-jwt-validation-hmac_0.2": {
                    "type": "object",
                    "properties": {
                        "header.name": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "Header name"
                        },
                        "allow.basic.value": {
                            "type": "boolean",
                            "description": "Is Basic or Digest value Allowed",
                            "default": false
                        },
                        "jwk.envvar": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "JWK env variable name",
                            "default": "JWK"
                        },
                        "jwks.uri": {
                            "schema": {
                                "type": "string",
                                "pattern": "((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[.\\!/\\w]*))?)",
                                "minLength": 1,
                                "maxLength": 500
                            },
                            "description": "JWKS endpoint"
                        },
                        "forward.jwt": {
                            "type": "boolean",
                            "description": "Forward the JWT to backend",
                            "default": true
                        },
                        "lifetime": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 99999999,
                            "description": "Token lifetime (seconds)",
                            "default": 5
                        },
                        "drift": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 86400,
                            "description": "Drift time (in seconds)",
                            "default": 10
                        },
                        "jti.timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 99999999,
                            "description": "JTI timeout (seconds)",
                            "default": 86400
                        },
                        "jp.claims.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer claims schema"
                        },
                        "claims.schema": {
                            "type": "object",
                            "description": "Claims schema"
                        },
                        "jp.jose.header.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer jose header schema"
                        },
                        "jose.header.schema": {
                            "type": "object",
                            "description": "JOSE header schema"
                        },
                        "jwk.cache.timeout": {
                            "type": "number",
                            "minimum": 60,
                            "maximum": 28000,
                            "description": "Cache expiration time for JWK entry",
                            "default": 3600
                        }
                    },
                    "required": [
                        "header.name"
                    ],
                    "additionalProperties": false,
                    "description": "JWT HMAC validation"
                }
            },
            "additionalProperties": false
        },
        "x-42c-jwt-validation-hmac_0.3": {
            "type": "object",
            "required": [
                "x-42c-jwt-validation-hmac_0.3"
            ],
            "properties": {
                "x-42c-jwt-validation-hmac_0.3": {
                    "type": "object",
                    "properties": {
                        "header.name": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "Header name"
                        },
                        "allow.basic.value": {
                            "type": "boolean",
                            "description": "Is Basic or Digest value Allowed",
                            "default": false
                        },
                        "jwk.envvar": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "JWK env variable name",
                            "default": "JWK"
                        },
                        "jwks.uri": {
                            "schema": {
                                "type": "string",
                                "pattern": "^(?:https?://\\w+(?:[\\-.]\\w+)*(?::\\d+)?/(?:\\.?\\w[\\w\\-./+%]*)?(?:[?;][\\w\\-./+%&=;,@]*)?)$",
                                "minLength": 9,
                                "maxLength": 500
                            },
                            "description": "JWKS endpoint"
                        },
                        "jwks.proxy": {
                            "schema": {
                                "type": "string",
                                "pattern": "^(?:\\w+(?:[\\-.]\\w+)*:\\d+)$",
                                "minLength": 3,
                                "maxLength": 250
                            },
                            "description": "JWKS connect proxy"
                        },
                        "forward.jwt": {
                            "type": "boolean",
                            "description": "Forward the JWT to backend",
                            "default": true
                        },
                        "lifetime": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 99999999,
                            "description": "Token lifetime (seconds)",
                            "default": 5
                        },
                        "drift": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 86400,
                            "description": "Drift time (in seconds)",
                            "default": 10
                        },
                        "jti.timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 99999999,
                            "description": "JTI timeout (seconds)",
                            "default": 86400
                        },
                        "jp.claims.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer claims schema"
                        },
                        "claims.schema": {
                            "type": "object",
                            "description": "Claims schema"
                        },
                        "jp.jose.header.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer jose header schema"
                        },
                        "jose.header.schema": {
                            "type": "object",
                            "description": "JOSE header schema"
                        },
                        "jwk.cache.timeout": {
                            "type": "number",
                            "minimum": 60,
                            "maximum": 28000,
                            "description": "Cache expiration time for JWK entry",
                            "default": 3600
                        }
                    },
                    "required": [
                        "header.name"
                    ],
                    "additionalProperties": false,
                    "description": "JWT HMAC validation"
                }
            },
            "additionalProperties": false
        },
        "x-42c-jwt-validation-no-sig-check_0.1": {
            "type": "object",
            "required": [
                "x-42c-jwt-validation-no-sig-check_0.1"
            ],
            "properties": {
                "x-42c-jwt-validation-no-sig-check_0.1": {
                    "type": "object",
                    "properties": {
                        "header.name": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "Header name"
                        },
                        "forward.jwt": {
                            "type": "boolean",
                            "description": "Forward the JWT to backend",
                            "default": true
                        },
                        "lifetime": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 99999999,
                            "description": "Token lifetime (seconds)",
                            "default": 5
                        },
                        "drift": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 86400,
                            "description": "Drift time (in seconds)",
                            "default": 10
                        },
                        "authorized.algorithms": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "HS256",
                                    "HS384",
                                    "HS512",
                                    "RS256",
                                    "RS384",
                                    "RS512",
                                    "PS256",
                                    "PS384",
                                    "PS512",
                                    "ES256",
                                    "ES384",
                                    "ES512"
                                ]
                            },
                            "description": "Authorized algorithms"
                        },
                        "jti.timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 99999999,
                            "description": "JTI timeout (seconds)"
                        },
                        "jp.claims.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer claims schema"
                        },
                        "claims.schema": {
                            "type": "object",
                            "description": "Claims schema"
                        },
                        "jp.jose.header.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer jose header schema"
                        },
                        "jose.header.schema": {
                            "type": "object",
                            "description": "JOSE header schema"
                        }
                    },
                    "required": [
                        "header.name",
                        "authorized.algorithms"
                    ],
                    "additionalProperties": false,
                    "description": "JWT validation (no signature check)"
                }
            },
            "additionalProperties": false
        },
        "x-42c-jwt-validation-no-sig-check_0.3": {
            "type": "object",
            "required": [
                "x-42c-jwt-validation-no-sig-check_0.3"
            ],
            "properties": {
                "x-42c-jwt-validation-no-sig-check_0.3": {
                    "type": "object",
                    "properties": {
                        "header.name": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "Header name"
                        },
                        "forward.jwt": {
                            "type": "boolean",
                            "description": "Forward the JWT to backend",
                            "default": true
                        },
                        "lifetime": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 99999999,
                            "description": "Token lifetime (seconds)",
                            "default": 5
                        },
                        "drift": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 86400,
                            "description": "Drift time (in seconds)",
                            "default": 10
                        },
                        "authorized.algorithms": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "HS256",
                                    "HS384",
                                    "HS512",
                                    "RS256",
                                    "RS384",
                                    "RS512",
                                    "PS256",
                                    "PS384",
                                    "PS512",
                                    "ES256",
                                    "ES384",
                                    "ES512"
                                ]
                            },
                            "description": "Authorized algorithms"
                        },
                        "jti.timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 99999999,
                            "description": "JTI timeout (seconds)"
                        },
                        "jp.claims.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer claims schema"
                        },
                        "claims.schema": {
                            "type": "object",
                            "description": "Claims schema"
                        },
                        "jp.jose.header.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer jose header schema"
                        },
                        "jose.header.schema": {
                            "type": "object",
                            "description": "JOSE header schema"
                        }
                    },
                    "required": [
                        "header.name",
                        "authorized.algorithms"
                    ],
                    "additionalProperties": false,
                    "description": "JWT validation (no signature check)"
                }
            },
            "additionalProperties": false
        },
        "x-42c-jwt-validation-rsa-no-sig-check_0.1": {
            "type": "object",
            "required": [
                "x-42c-jwt-validation-rsa-no-sig-check_0.1"
            ],
            "properties": {
                "x-42c-jwt-validation-rsa-no-sig-check_0.1": {
                    "type": "object",
                    "properties": {
                        "header.name": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "Header name"
                        },
                        "forward.jwt": {
                            "type": "boolean",
                            "description": "Forward the JWT to backend",
                            "default": true
                        },
                        "lifetime": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 99999999,
                            "description": "Token lifetime (seconds)",
                            "default": 5
                        },
                        "drift": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 86400,
                            "description": "Drift time (in seconds)",
                            "default": 10
                        },
                        "jti.timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 99999999,
                            "description": "JTI timeout (seconds)",
                            "default": 86400
                        },
                        "jp.claims.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer claims schema"
                        },
                        "claims.schema": {
                            "type": "object",
                            "description": "Claims schema"
                        },
                        "jp.jose.header.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer jose header schema"
                        },
                        "jose.header.schema": {
                            "type": "object",
                            "description": "JOSE header schema"
                        }
                    },
                    "required": [
                        "header.name"
                    ],
                    "additionalProperties": false,
                    "description": "JWT RSA validation (no sig check)"
                }
            },
            "additionalProperties": false
        },
        "x-42c-jwt-validation-rsa-no-sig-check_0.3": {
            "type": "object",
            "required": [
                "x-42c-jwt-validation-rsa-no-sig-check_0.3"
            ],
            "properties": {
                "x-42c-jwt-validation-rsa-no-sig-check_0.3": {
                    "type": "object",
                    "properties": {
                        "header.name": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "Header name"
                        },
                        "forward.jwt": {
                            "type": "boolean",
                            "description": "Forward the JWT to backend",
                            "default": true
                        },
                        "lifetime": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 99999999,
                            "description": "Token lifetime (seconds)",
                            "default": 5
                        },
                        "drift": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 86400,
                            "description": "Drift time (in seconds)",
                            "default": 10
                        },
                        "jti.timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 99999999,
                            "description": "JTI timeout (seconds)",
                            "default": 86400
                        },
                        "jp.claims.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer claims schema"
                        },
                        "claims.schema": {
                            "type": "object",
                            "description": "Claims schema"
                        },
                        "jp.jose.header.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer jose header schema"
                        },
                        "jose.header.schema": {
                            "type": "object",
                            "description": "JOSE header schema"
                        }
                    },
                    "required": [
                        "header.name"
                    ],
                    "additionalProperties": false,
                    "description": "JWT RSA validation (no sig check)"
                }
            },
            "additionalProperties": false
        },
        "x-42c-jwt-validation-rsa_0.1": {
            "type": "object",
            "required": [
                "x-42c-jwt-validation-rsa_0.1"
            ],
            "properties": {
                "x-42c-jwt-validation-rsa_0.1": {
                    "type": "object",
                    "properties": {
                        "header.name": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "Header name"
                        },
                        "jwk.envvar": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "JWK env variable name",
                            "default": "JWK"
                        },
                        "forward.jwt": {
                            "type": "boolean",
                            "description": "Forward the JWT to backend",
                            "default": true
                        },
                        "lifetime": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 99999999,
                            "description": "Token lifetime (seconds)",
                            "default": 5
                        },
                        "drift": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 86400,
                            "description": "Drift time (in seconds)",
                            "default": 10
                        },
                        "jti.timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 99999999,
                            "description": "JTI timeout (seconds)",
                            "default": 86400
                        },
                        "jp.claims.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer claims schema"
                        },
                        "claims.schema": {
                            "type": "object",
                            "description": "Claims schema"
                        },
                        "jp.jose.header.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer jose header schema"
                        },
                        "jose.header.schema": {
                            "type": "object",
                            "description": "JOSE header schema"
                        }
                    },
                    "required": [
                        "header.name"
                    ],
                    "additionalProperties": false,
                    "description": "JWT RSA validation"
                }
            },
            "additionalProperties": false
        },
        "x-42c-jwt-validation-rsa_0.2": {
            "type": "object",
            "required": [
                "x-42c-jwt-validation-rsa_0.2"
            ],
            "properties": {
                "x-42c-jwt-validation-rsa_0.2": {
                    "type": "object",
                    "properties": {
                        "header.name": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "Header name",
                            "default": "Authorization"
                        },
                        "allow.basic.value": {
                            "type": "boolean",
                            "description": "Is Basic or Digest value allowed",
                            "default": false
                        },
                        "jwk.envvar": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "JWK env variable name",
                            "default": "JWK"
                        },
                        "jwks.uri": {
                            "schema": {
                                "type": "string",
                                "pattern": "((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[.\\!/\\w]*))?)",
                                "minLength": 1,
                                "maxLength": 500
                            },
                            "description": "JWKS endpoint"
                        },
                        "forward.jwt": {
                            "type": "boolean",
                            "description": "Forward the JWT to backend",
                            "default": true
                        },
                        "lifetime": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 99999999,
                            "description": "Token lifetime (seconds)",
                            "default": 5
                        },
                        "drift": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 86400,
                            "description": "Drift time (in seconds)",
                            "default": 10
                        },
                        "jti.timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 99999999,
                            "description": "JTI timeout (seconds)",
                            "default": 86400
                        },
                        "jp.claims.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer claims schema"
                        },
                        "claims.schema": {
                            "type": "object",
                            "description": "Claims schema"
                        },
                        "jp.jose.header.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer jose header schema"
                        },
                        "jose.header.schema": {
                            "type": "object",
                            "description": "JOSE header schema"
                        },
                        "jwk.cache.timeout": {
                            "type": "number",
                            "minimum": 60,
                            "maximum": 28000,
                            "description": "Cache expiration time for JWK entry",
                            "default": 3600
                        }
                    },
                    "required": [
                        "header.name"
                    ],
                    "additionalProperties": false,
                    "description": "JWT RSA validation"
                }
            },
            "additionalProperties": false
        },
        "x-42c-jwt-validation-rsa_0.3": {
            "type": "object",
            "required": [
                "x-42c-jwt-validation-rsa_0.3"
            ],
            "properties": {
                "x-42c-jwt-validation-rsa_0.3": {
                    "type": "object",
                    "properties": {
                        "header.name": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "Header name",
                            "default": "Authorization"
                        },
                        "allow.basic.value": {
                            "type": "boolean",
                            "description": "Is Basic or Digest value allowed",
                            "default": false
                        },
                        "jwk.envvar": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "JWK env variable name",
                            "default": "JWK"
                        },
                        "jwks.uri": {
                            "schema": {
                                "type": "string",
                                "pattern": "^(?:https?://\\w+(?:[\\-.]\\w+)*(?::\\d+)?/(?:\\.?\\w[\\w\\-./+%]*)?(?:[?;][\\w\\-./+%&=;,@]*)?)$",
                                "minLength": 9,
                                "maxLength": 500
                            },
                            "description": "JWKS endpoint"
                        },
                        "jwks.proxy": {
                            "schema": {
                                "type": "string",
                                "pattern": "^(?:\\w+(?:[\\-.]\\w+)*:\\d+)$",
                                "minLength": 3,
                                "maxLength": 250
                            },
                            "description": "JWKS connect proxy"
                        },
                        "forward.jwt": {
                            "type": "boolean",
                            "description": "Forward the JWT to backend",
                            "default": true
                        },
                        "lifetime": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 99999999,
                            "description": "Token lifetime (seconds)",
                            "default": 5
                        },
                        "drift": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 86400,
                            "description": "Drift time (in seconds)",
                            "default": 10
                        },
                        "jti.timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 99999999,
                            "description": "JTI timeout (seconds)",
                            "default": 86400
                        },
                        "jp.claims.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer claims schema"
                        },
                        "claims.schema": {
                            "type": "object",
                            "description": "Claims schema"
                        },
                        "jp.jose.header.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer jose header schema"
                        },
                        "jose.header.schema": {
                            "type": "object",
                            "description": "JOSE header schema"
                        },
                        "jwk.cache.timeout": {
                            "type": "number",
                            "minimum": 60,
                            "maximum": 28000,
                            "description": "Cache expiration time for JWK entry",
                            "default": 3600
                        }
                    },
                    "required": [
                        "header.name"
                    ],
                    "additionalProperties": false,
                    "description": "JWT RSA validation"
                }
            },
            "additionalProperties": false
        },
        "x-42c-jwt-validation_0.1": {
            "type": "object",
            "required": [
                "x-42c-jwt-validation_0.1"
            ],
            "properties": {
                "x-42c-jwt-validation_0.1": {
                    "type": "object",
                    "properties": {
                        "header.name": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "Header name"
                        },
                        "jwk.envvar": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "JWK env variable name",
                            "default": "JWK"
                        },
                        "forward.jwt": {
                            "type": "boolean",
                            "description": "Forward the JWT to backend",
                            "default": true
                        },
                        "lifetime": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 99999999,
                            "description": "Token lifetime (seconds)",
                            "default": 5
                        },
                        "drift": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 86400,
                            "description": "Drift time (in seconds)",
                            "default": 10
                        },
                        "authorized.algorithms": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "HS256",
                                    "HS384",
                                    "HS512",
                                    "RS256",
                                    "RS384",
                                    "RS512",
                                    "PS256",
                                    "PS384",
                                    "PS512",
                                    "ES256",
                                    "ES384",
                                    "ES512"
                                ]
                            },
                            "description": "Authorized algorithms"
                        },
                        "jti.timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 99999999,
                            "description": "JTI timeout (seconds)"
                        },
                        "jp.claims.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer claims schema"
                        },
                        "claims.schema": {
                            "type": "object",
                            "description": "Claims schema"
                        },
                        "jp.jose.header.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer jose header schema"
                        },
                        "jose.header.schema": {
                            "type": "object",
                            "description": "JOSE header schema"
                        }
                    },
                    "required": [
                        "header.name",
                        "authorized.algorithms"
                    ],
                    "additionalProperties": false,
                    "description": "JWT validation"
                }
            },
            "additionalProperties": false
        },
        "x-42c-jwt-validation_0.2": {
            "type": "object",
            "required": [
                "x-42c-jwt-validation_0.2"
            ],
            "properties": {
                "x-42c-jwt-validation_0.2": {
                    "type": "object",
                    "properties": {
                        "header.name": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "Header name"
                        },
                        "allow.basic.value": {
                            "type": "boolean",
                            "description": "Is Basic or Digest value allowed",
                            "default": false
                        },
                        "jwk.envvar": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "JWK env variable name",
                            "default": "JWK"
                        },
                        "jwks.uri": {
                            "schema": {
                                "type": "string",
                                "pattern": "((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[.\\!/\\w]*))?)",
                                "minLength": 1,
                                "maxLength": 500
                            },
                            "description": "JWKS endpoint"
                        },
                        "forward.jwt": {
                            "type": "boolean",
                            "description": "Forward the JWT to backend",
                            "default": true
                        },
                        "lifetime": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 99999999,
                            "description": "Token lifetime (seconds)",
                            "default": 5
                        },
                        "drift": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 86400,
                            "description": "Drift time (in seconds)",
                            "default": 10
                        },
                        "authorized.algorithms": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "HS256",
                                    "HS384",
                                    "HS512",
                                    "RS256",
                                    "RS384",
                                    "RS512",
                                    "PS256",
                                    "PS384",
                                    "PS512",
                                    "ES256",
                                    "ES384",
                                    "ES512"
                                ]
                            },
                            "description": "Authorized algorithms"
                        },
                        "jti.timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 99999999,
                            "description": "JTI timeout (seconds)"
                        },
                        "jwk.cache.timeout": {
                            "type": "number",
                            "minimum": 60,
                            "maximum": 28000,
                            "description": "Cache expiration time for JWK entry",
                            "default": 3600
                        },
                        "jp.claims.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer claims schema"
                        },
                        "claims.schema": {
                            "type": "object",
                            "description": "Claims schema"
                        },
                        "jp.jose.header.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer jose header schema"
                        },
                        "jose.header.schema": {
                            "type": "object",
                            "description": "JOSE header schema"
                        }
                    },
                    "required": [
                        "header.name",
                        "authorized.algorithms"
                    ],
                    "additionalProperties": false,
                    "description": "JWT validation"
                }
            },
            "additionalProperties": false
        },
        "x-42c-jwt-validation_0.3": {
            "type": "object",
            "required": [
                "x-42c-jwt-validation_0.3"
            ],
            "properties": {
                "x-42c-jwt-validation_0.3": {
                    "type": "object",
                    "properties": {
                        "header.name": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "Header name"
                        },
                        "allow.basic.value": {
                            "type": "boolean",
                            "description": "Is Basic or Digest value allowed",
                            "default": false
                        },
                        "jwk.envvar": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100,
                            "description": "JWK env variable name",
                            "default": "JWK"
                        },
                        "jwks.uri": {
                            "schema": {
                                "type": "string",
                                "pattern": "^(?:https?://\\w+(?:[\\-.]\\w+)*(?::\\d+)?/(?:\\.?\\w[\\w\\-./+%]*)?(?:[?;][\\w\\-./+%&=;,@]*)?)$",
                                "minLength": 9,
                                "maxLength": 500
                            },
                            "description": "JWKS endpoint"
                        },
                        "jwks.proxy": {
                            "schema": {
                                "type": "string",
                                "pattern": "^(?:\\w+(?:[\\-.]\\w+)*:\\d+)$",
                                "minLength": 3,
                                "maxLength": 250
                            },
                            "description": "JWKS connect proxy"
                        },
                        "forward.jwt": {
                            "type": "boolean",
                            "description": "Forward the JWT to backend",
                            "default": true
                        },
                        "lifetime": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 99999999,
                            "description": "Token lifetime (seconds)",
                            "default": 5
                        },
                        "drift": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 86400,
                            "description": "Drift time (in seconds)",
                            "default": 10
                        },
                        "authorized.algorithms": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "HS256",
                                    "HS384",
                                    "HS512",
                                    "RS256",
                                    "RS384",
                                    "RS512",
                                    "PS256",
                                    "PS384",
                                    "PS512",
                                    "ES256",
                                    "ES384",
                                    "ES512"
                                ]
                            },
                            "description": "Authorized algorithms"
                        },
                        "jti.timeout": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 99999999,
                            "description": "JTI timeout (seconds)"
                        },
                        "jwk.cache.timeout": {
                            "type": "number",
                            "minimum": 60,
                            "maximum": 28000,
                            "description": "Cache expiration time for JWK entry",
                            "default": 3600
                        },
                        "jp.claims.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer claims schema"
                        },
                        "claims.schema": {
                            "type": "object",
                            "description": "Claims schema"
                        },
                        "jp.jose.header.schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50000,
                            "pattern": "^\\#(/([^/~]+|~[01])+)*$",
                            "description": "JPointer jose header schema"
                        },
                        "jose.header.schema": {
                            "type": "object",
                            "description": "JOSE header schema"
                        }
                    },
                    "required": [
                        "header.name",
                        "authorized.algorithms"
                    ],
                    "additionalProperties": false,
                    "description": "JWT validation"
                }
            },
            "additionalProperties": false
        }
    }
}